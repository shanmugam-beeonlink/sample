name: Full CI/CD Pipeline for Localhost Deployment

on:
  push:
    branches:
      - main  # Run on push to `main`
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - localhost

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          docker build -t app:latest .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: echo "No tests yet"  # Replace with `npm test` when ready

  deploy:
    name: Deploy to Localhost
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'workflow_dispatch'  # Triggered by manual workflow_dispatch only

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          docker build -t app:latest .

      - name: Deploy to localhost
        run: |
          echo "Deploying to localhost..."
          # Replace with the local server deployment steps, for example using SSH
          # SSH to your machine to pull & run the Docker container
          ssh -o StrictHostKeyChecking=no user@your_local_ip "
            docker pull app:latest &&
            docker stop app || true &&
            docker rm app || true &&
            docker run -d -p 3000:3000 --name app app:latest
          "
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          LOCAL_IP: ${{ secrets.LOCAL_IP }}  # Set this in GitHub Secrets
