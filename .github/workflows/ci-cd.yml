name: Local Deployment Pipeline

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy environment'
        required: true
        default: 'local'
        type: choice
        options:
          - local

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/local-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/local-app:latest

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: echo "No tests yet" # Replace with `npm test`

  migrate:
    name: DB Migrate
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run migration
        run: |
          echo "Running DB migration"
          # npx prisma migrate deploy

  deploy-local:
    name: Deploy Local
    runs-on: ubuntu-latest
    needs: migrate
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'local'

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull and run Docker Container
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/local-app:latest
          docker run -d -p 3000:3000 --name local-app ${{ secrets.DOCKER_USERNAME }}/local-app:latest

      - name: Verify Deployment
        run: docker ps
